// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

//consite en llamar a una funcion repetidamente aunque no se haya terminado de ejecutar la vez anterior
contract ReEntrancyVulnerable{
    mapping(address => uint256) private balances;

    function deposit() external payable{
        balances[msg.sender] += msg.value;        
    }

    function withdrawn(uint _amount) external{
        require(_amount <= balances[msg.sender], "saldo insuficiente");
        
        //vulnerabilidad actualiza el saldo antes 
        (bool success, ) = msg.sender.call{value: _amount}("");
        require(success, "Transferencia fallida");

        balances[msg.sender] -= _amount;
    }
}